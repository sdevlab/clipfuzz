FROM ubuntu:20.04
ENV TERM xterm-256color
ENV DEBIAN_FRONTEND noninteractive

RUN apt-get update && \
    apt-get -y upgrade && \
    apt-get -y install \
    clang-12 make cmake git wget curl tar gdb vim clang-tools-12 \
    python3 python3-pip libprotobuf-dev protobuf-compiler

# Install poetry
RUN python3 -m pip install poetry

WORKDIR /graphfuzz
COPY submodule/GraphFuzz/cli /graphfuzz/cli
COPY submodule/GraphFuzz/core /graphfuzz/core
COPY submodule/GraphFuzz/CMakeLists.txt /graphfuzz/CMakeLists.txt

# Build and install libgraphfuzz
RUN cd /graphfuzz && \
    mkdir build && \
    cd build && \
    cmake .. && \
    make && \
    make install

# Install gfuzz python tool
RUN cd /graphfuzz/cli && \
    poetry build && \
    poetry export > dist/requirements.txt && \
    python3 -m pip install -r dist/requirements.txt && \
    python3 -m pip install ./dist/gfuzz-*.whl

COPY submodule/harfbuzz /graphfuzz/harfbuzz
WORKDIR /graphfuzz/harfbuzz

RUN apt-get install -y pkg-config libtool meson && \
    pip3 install --upgrade meson
RUN apt-get update && \
    apt-get install -y libc++-12-dev libc++abi-12-dev libglib2.0-dev

ENV LIB_FUZZING_ENGINE="-fsanitize=fuzzer"
ENV CC="clang-12"
ENV CXX="clang++-12"
ENV CFLAGS="-O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -fno-sanitize=vptr -DHB_NO_VISIBILITY"
ENV CXXFLAGS="-O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -fno-sanitize=vptr -DHB_NO_VISIBILITY"

RUN mkdir build && \
    meson --default-library=static \
        --wrap-mode=nodownload \
        -Dexperimental_api=true \
        build && \
    ninja -v -j$(nproc) -C build test/fuzzing/hb-shape-fuzzer

RUN mkdir gfuzz

COPY submodule/harfbuzz /graphfuzz/harfbuzz_cov
WORKDIR /graphfuzz/harfbuzz_cov

ENV CFLAGS="-O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -fno-sanitize=vptr -DHB_NO_VISIBILITY -fprofile-instr-generate -fcoverage-mapping"
ENV CXXFLAGS="-O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -fno-sanitize=vptr -DHB_NO_VISIBILITY -fprofile-instr-generate -fcoverage-mapping"

RUN mkdir build && \
    meson --default-library=static \
        --wrap-mode=nodownload \
        -Dexperimental_api=true \
        build && \
    ninja -v -j$(nproc) -C build test/fuzzing/hb-shape-fuzzer


WORKDIR /graphfuzz/harfbuzz/gfuzz

COPY artifact/harfbuzz/header /graphfuzz/harfbuzz/gfuzz/header
COPY artifact/harfbuzz/script /graphfuzz/harfbuzz/gfuzz/script
COPY artifact/harfbuzz/schema.yaml /graphfuzz/harfbuzz/gfuzz/schema.yaml
COPY artifact/harfbuzz/src /graphfuzz/harfbuzz/gfuzz/src

RUN pip install protobuf==3.20.0 && \
    protoc --python_out=. src/graph.proto

RUN ./script/build.sh
